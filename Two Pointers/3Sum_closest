"""
Input: nums = [-1,2,1,-4], target = 1
Output: 2
Explanation: The sum that is closest to the target is 2. (-1 + 2 + 1 = 2).

Use the two pointer method, similar to the regular 3Sum problem. 
"""

class Solution:
    def threeSumClosest(self, nums: List[int], target: int) -> int:
        nums.sort()
        for i in range(len(nums)):
            lo = i+1
            hi = len(nums) - 1
            diff = float('inf')
            while(lo < hi):
                mySum = nums[i] + nums[lo] + nums[hi]
                if abs(target - mySum) < abs(diff):
                    diff = target - mySum
                if mySum < target:
                    lo += 1
                else:
                    hi -= 1
            if diff == 0:
                    return target
        return target - diff
